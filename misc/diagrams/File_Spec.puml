@startuml

skinparam linetype ortho

rectangle " " as spec {
json File_Spec {
    "SpecVersion": "u8; = 2",

    "NumberOfAuthors": "u16",
    "ProposalKeys": {
        "Key-0": "b80; <Proposal-Key encrypted with the Author-0s public key>",
        "...": "more keys"
    },

    "Proposal": {
        "AuthorList": {
            "Author-0": {
                "Name": "string",
                "Mail": "string",
                "SignPublicKey": "b32",
                "CryptPublicKey": "b32",
                "SignCount": "u32; = <number of frames which were signed by this author>",
                "Signature": "b64; = _sign(_hash(_frame))"
            },
            "...": "more Authors"
        },

        "GenesisVal": "b32",

        "Addendum": {
            "Type": "u8; = 1",
            "HashOfPrevFrame": "b32",
            "Timestamp": "b7; UNIX-Timestamp in ms",
            "AuthorRef": "u16; <index of author>",
            "Title": "string",
            "Mime": "string",
            "DataLength": "u32; <number of bytes of Data>",
            "Data": "blob",
            "Hash": "b32; = _hash(_frame)"
        },
        "Vote": {
            "Type": "u8; = 2",
            "HashOfPrevFrame": "b32",
            "Timestamp": "b7; UNIX-Timestamp in ms",
            "AuthorRef": "u16; <index of author>",
            "HashOfTargetAddendum": "b32",
            "Vote": "u8; 0 or 1",
            "Hash": "b32; = _hash(_frame)",
            "Signature": "b64; = _sign(_hash(_frame))"
        },
        "...": "more Vote / Addendum"
    }
}
}

rectangle " " as notes {
card symbols [
   <b>Symbols</b>
   --
   - u$x: $x bits long unsigned integer
   - b$x: $x bytes
   - _frame: data of the current frame
   - _hash($inp): hash of $inp
   - _sign($inp): signature of $inp with the current authors private key
]

card notes [
    <b>Notes</b>
    --
    - all bytes are stored big-endian
    - strings are 0-terminated UTF-8
    - all data of 'Proposal' is encrypted with the symmetric "Proposal-Key"
]

card requirements [
    <b>Function requirements</b>
    --
    - the author of an Addendum has to vote positive for it (at the time of the Addendum creation)
    - Proposals are accepted if every author votes positive for the latest Addendum
    - only the latest Addendum may be voted on
    - at file-loading all frames have to be validated (including their chronological order) (+ the latest frame must be in the past)
]
}

spec --[hidden] notes

@enduml
